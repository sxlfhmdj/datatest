<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xiaod.datatest.multi.dao.sale.iface.PayOrderInfoMapper">
  <resultMap id="BaseResultMap" type="org.xiaod.datatest.multi.dao.sale.mapper.PayOrderInfo">
    <id column="pay_order_id" jdbcType="VARCHAR" property="payOrderId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="order_state" jdbcType="CHAR" property="orderState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    pay_order_id, order_id, order_state, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_pay_order_info
    where pay_order_id = #{payOrderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_pay_order_info
    where pay_order_id = #{payOrderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.xiaod.datatest.multi.dao.sale.mapper.PayOrderInfo">
    insert into t_pay_order_info (pay_order_id, order_id, order_state, 
      create_time, update_time)
    values (#{payOrderId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{orderState,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.xiaod.datatest.multi.dao.sale.mapper.PayOrderInfo">
    insert into t_pay_order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payOrderId != null">
        pay_order_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payOrderId != null">
        #{payOrderId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.xiaod.datatest.multi.dao.sale.mapper.PayOrderInfo">
    update t_pay_order_info
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pay_order_id = #{payOrderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xiaod.datatest.multi.dao.sale.mapper.PayOrderInfo">
    update t_pay_order_info
    set order_id = #{orderId,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where pay_order_id = #{payOrderId,jdbcType=VARCHAR}
  </update>
</mapper>